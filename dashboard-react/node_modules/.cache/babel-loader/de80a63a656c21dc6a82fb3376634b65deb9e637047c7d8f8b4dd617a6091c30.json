{"ast":null,"code":"var _jsxFileName = \"/home/dell/zobon/dashboard-react/src/components/FullDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport dayjs from 'dayjs';\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ScatterChart, Scatter, LineChart, Line, Cell } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#4f46e5',\n// Indigo-600\n'#f43f5e',\n// Rose-500\n'#22c55e',\n// Emerald-500\n'#f59e0b',\n// Amber-500\n'#3b82f6',\n// Blue-500\n'#ec4899' // Pink-500\n];\nexport default function FullDashboard() {\n  _s();\n  const [brands, setBrands] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/brands').then(res => setBrands(res.data)).catch(console.error);\n    axios.get('http://localhost:5001/api/alerts?limit=500').then(res => setAlerts(res.data)).catch(console.error);\n  }, []);\n\n  // 1. Avg Trust Score by Brand\n  const trustData = brands.map(({\n    brand,\n    avg_trust_score\n  }) => ({\n    brand,\n    avg_trust_score: Number(avg_trust_score.toFixed(2))\n  }));\n\n  // 2. Scatter Chart: brand mentions vs avg trust score\n  const scatterData = brands.map(({\n    brand,\n    avg_trust_score,\n    mention_count\n  }) => ({\n    brand,\n    avg_trust_score: Number(avg_trust_score.toFixed(2)),\n    mention_count\n  }));\n\n  // 3. Stacked Bar Chart: Alerts by Brand & Level\n  const alertLevels = Array.from(new Set(alerts.map(a => a.alert_level)));\n  const brandAlertLevelMap = {};\n  brands.forEach(({\n    brand\n  }) => {\n    brandAlertLevelMap[brand] = {};\n  });\n  alerts.forEach(({\n    brand,\n    alert_level\n  }) => {\n    if (brandAlertLevelMap[brand]) {\n      brandAlertLevelMap[brand][alert_level] = (brandAlertLevelMap[brand][alert_level] || 0) + 1;\n    }\n  });\n  const stackedBarData = brands.map(({\n    brand\n  }) => {\n    const item = {\n      brand\n    };\n    alertLevels.forEach(level => {\n      item[level] = brandAlertLevelMap[brand][level] || 0;\n    });\n    return item;\n  });\n\n  // 4. Trust Score Trend Line Chart\n  const brandDateMap = {};\n  alerts.forEach(({\n    brand,\n    trust_score,\n    timestamp\n  }) => {\n    if (!brand || trust_score == null || !timestamp) return;\n    const date = dayjs(timestamp).format('YYYY-MM-DD');\n    const key = `${brand}-${date}`;\n    if (!brandDateMap[key]) brandDateMap[key] = {\n      brand,\n      date,\n      trustScores: []\n    };\n    brandDateMap[key].trustScores.push(trust_score);\n  });\n  const trendData = Object.values(brandDateMap).map(({\n    brand,\n    date,\n    trustScores\n  }) => ({\n    brand,\n    date,\n    avgTrustScore: trustScores.reduce((a, b) => a + b, 0) / trustScores.length\n  }));\n  const uniqueDates = Array.from(new Set(trendData.map(d => d.date))).sort();\n  const uniqueBrands = Array.from(new Set(trendData.map(d => d.brand)));\n  const lineChartData = uniqueDates.map(date => {\n    const entry = {\n      date\n    };\n    uniqueBrands.forEach(brand => {\n      const found = trendData.find(d => d.brand === brand && d.date === date);\n      entry[brand] = found ? Number(found.avgTrustScore.toFixed(2)) : null;\n    });\n    return entry;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 lg:grid-cols-2 gap-8 p-6 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"bg-white p-4 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-extrabold mb-6 text-indigo-700\",\n        children: \"Average Trust Score by Brand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 320,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: trustData,\n          margin: {\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#cbd5e1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"brand\",\n            tick: {\n              fill: '#334155',\n              fontWeight: '600'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            domain: [0, 100],\n            tick: {\n              fill: '#334155',\n              fontWeight: '600'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            contentStyle: {\n              backgroundColor: '#f9fafb',\n              borderRadius: 8,\n              borderColor: '#e2e8f0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"avg_trust_score\",\n            radius: [8, 8, 0, 0],\n            fill: \"#4f46e5\",\n            animationDuration: 1000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"bg-white p-4 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-extrabold mb-6 text-pink-600\",\n        children: \"Brand Mentions vs Trust Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 320,\n        children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n          margin: {\n            top: 20,\n            right: 20,\n            bottom: 40,\n            left: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#e0e7ff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            dataKey: \"mention_count\",\n            name: \"Mentions\",\n            tick: {\n              fill: '#9ca3af'\n            },\n            label: {\n              value: 'Mention Count',\n              position: 'bottom',\n              fill: '#374151',\n              fontWeight: '700'\n            },\n            domain: ['dataMin - 100', 'dataMax + 100']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            dataKey: \"avg_trust_score\",\n            name: \"Trust Score\",\n            tick: {\n              fill: '#9ca3af'\n            },\n            label: {\n              value: 'Avg Trust Score',\n              angle: -90,\n              position: 'insideLeft',\n              fill: '#374151',\n              fontWeight: '700'\n            },\n            domain: [0, 100]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            cursor: {\n              strokeDasharray: '3 3'\n            },\n            formatter: (value, name) => name === 'Trust Score' ? value.toFixed(2) : value,\n            contentStyle: {\n              backgroundColor: '#fef3c7',\n              borderRadius: 8,\n              borderColor: '#f59e0b'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Brands\",\n            data: scatterData,\n            fill: \"#ec4899\",\n            children: scatterData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"bg-white p-4 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-extrabold mb-6 text-green-600\",\n        children: \"Alerts by Brand and Severity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 320,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: stackedBarData,\n          margin: {\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#d1fae5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"brand\",\n            tick: {\n              fill: '#065f46',\n              fontWeight: '700'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            tick: {\n              fill: '#065f46',\n              fontWeight: '700'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            contentStyle: {\n              backgroundColor: '#dcfce7',\n              borderRadius: 8,\n              borderColor: '#22c55e'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            verticalAlign: \"top\",\n            wrapperStyle: {\n              fontWeight: '700'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), alertLevels.map((level, idx) => /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: level,\n            stackId: \"a\",\n            fill: COLORS[idx % COLORS.length],\n            radius: idx === alertLevels.length - 1 ? [8, 8, 0, 0] : 0,\n            animationDuration: 1000\n          }, level, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"bg-white p-4 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-extrabold mb-6 text-amber-600\",\n        children: \"Trust Score Trend Over Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 320,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: lineChartData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#fbbf24\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\",\n            tick: {\n              fill: '#78350f',\n              fontWeight: '600'\n            },\n            tickFormatter: date => dayjs(date).format('MMM D')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            domain: [0, 100],\n            tick: {\n              fill: '#78350f',\n              fontWeight: '600'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            contentStyle: {\n              backgroundColor: '#fef3c7',\n              borderRadius: 8,\n              borderColor: '#f59e0b'\n            },\n            labelFormatter: label => dayjs(label).format('MMMM D, YYYY')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            verticalAlign: \"top\",\n            wrapperStyle: {\n              fontWeight: '700'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), uniqueBrands.map((brand, idx) => /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: brand,\n            stroke: COLORS[idx % COLORS.length],\n            dot: false,\n            connectNulls: true,\n            strokeWidth: 3,\n            animationDuration: 1000\n          }, brand, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(FullDashboard, \"8D2MBDNwyMSjwVVRvj+53iuoQTM=\");\n_c = FullDashboard;\nvar _c;\n$RefreshReg$(_c, \"FullDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","dayjs","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ScatterChart","Scatter","LineChart","Line","Cell","jsxDEV","_jsxDEV","COLORS","FullDashboard","_s","brands","setBrands","alerts","setAlerts","get","then","res","data","catch","console","error","trustData","map","brand","avg_trust_score","Number","toFixed","scatterData","mention_count","alertLevels","Array","from","Set","a","alert_level","brandAlertLevelMap","forEach","stackedBarData","item","level","brandDateMap","trust_score","timestamp","date","format","key","trustScores","push","trendData","Object","values","avgTrustScore","reduce","b","length","uniqueDates","d","sort","uniqueBrands","lineChartData","entry","found","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","bottom","strokeDasharray","stroke","dataKey","tick","fill","fontWeight","domain","contentStyle","backgroundColor","borderRadius","borderColor","radius","animationDuration","top","right","left","type","name","label","value","position","angle","cursor","formatter","index","verticalAlign","wrapperStyle","idx","stackId","tickFormatter","labelFormatter","dot","connectNulls","strokeWidth","_c","$RefreshReg$"],"sources":["/home/dell/zobon/dashboard-react/src/components/FullDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport dayjs from 'dayjs';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Legend,\n  ScatterChart,\n  Scatter,\n  LineChart,\n  Line,\n  Cell,\n} from 'recharts';\n\nconst COLORS = [\n  '#4f46e5', // Indigo-600\n  '#f43f5e', // Rose-500\n  '#22c55e', // Emerald-500\n  '#f59e0b', // Amber-500\n  '#3b82f6', // Blue-500\n  '#ec4899', // Pink-500\n];\n\nexport default function FullDashboard() {\n  const [brands, setBrands] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/brands').then(res => setBrands(res.data)).catch(console.error);\n    axios.get('http://localhost:5001/api/alerts?limit=500').then(res => setAlerts(res.data)).catch(console.error);\n  }, []);\n\n  // 1. Avg Trust Score by Brand\n  const trustData = brands.map(({ brand, avg_trust_score }) => ({\n    brand,\n    avg_trust_score: Number(avg_trust_score.toFixed(2)),\n  }));\n\n  // 2. Scatter Chart: brand mentions vs avg trust score\n  const scatterData = brands.map(({ brand, avg_trust_score, mention_count }) => ({\n    brand,\n    avg_trust_score: Number(avg_trust_score.toFixed(2)),\n    mention_count,\n  }));\n\n  // 3. Stacked Bar Chart: Alerts by Brand & Level\n  const alertLevels = Array.from(new Set(alerts.map(a => a.alert_level)));\n  const brandAlertLevelMap = {};\n  brands.forEach(({ brand }) => {\n    brandAlertLevelMap[brand] = {};\n  });\n  alerts.forEach(({ brand, alert_level }) => {\n    if (brandAlertLevelMap[brand]) {\n      brandAlertLevelMap[brand][alert_level] = (brandAlertLevelMap[brand][alert_level] || 0) + 1;\n    }\n  });\n  const stackedBarData = brands.map(({ brand }) => {\n    const item = { brand };\n    alertLevels.forEach(level => {\n      item[level] = brandAlertLevelMap[brand][level] || 0;\n    });\n    return item;\n  });\n\n  // 4. Trust Score Trend Line Chart\n  const brandDateMap = {};\n  alerts.forEach(({ brand, trust_score, timestamp }) => {\n    if (!brand || trust_score == null || !timestamp) return;\n    const date = dayjs(timestamp).format('YYYY-MM-DD');\n    const key = `${brand}-${date}`;\n    if (!brandDateMap[key]) brandDateMap[key] = { brand, date, trustScores: [] };\n    brandDateMap[key].trustScores.push(trust_score);\n  });\n  const trendData = Object.values(brandDateMap).map(({ brand, date, trustScores }) => ({\n    brand,\n    date,\n    avgTrustScore: trustScores.reduce((a, b) => a + b, 0) / trustScores.length,\n  }));\n  const uniqueDates = Array.from(new Set(trendData.map(d => d.date))).sort();\n  const uniqueBrands = Array.from(new Set(trendData.map(d => d.brand)));\n  const lineChartData = uniqueDates.map(date => {\n    const entry = { date };\n    uniqueBrands.forEach(brand => {\n      const found = trendData.find(d => d.brand === brand && d.date === date);\n      entry[brand] = found ? Number(found.avgTrustScore.toFixed(2)) : null;\n    });\n    return entry;\n  });\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 p-6 bg-gray-50 min-h-screen\">\n\n      {/* Avg Trust Score Bar Chart */}\n      <section className=\"bg-white p-4 rounded shadow\">\n        <h2 className=\"text-2xl font-extrabold mb-6 text-indigo-700\">Average Trust Score by Brand</h2>\n        <ResponsiveContainer width=\"100%\" height={320}>\n          <BarChart data={trustData} margin={{ bottom: 20 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#cbd5e1\" />\n            <XAxis dataKey=\"brand\" tick={{ fill: '#334155', fontWeight: '600' }} />\n            <YAxis domain={[0, 100]} tick={{ fill: '#334155', fontWeight: '600' }} />\n            <Tooltip\n              contentStyle={{ backgroundColor: '#f9fafb', borderRadius: 8, borderColor: '#e2e8f0' }}\n            />\n            <Bar\n              dataKey=\"avg_trust_score\"\n              radius={[8, 8, 0, 0]}\n              fill=\"#4f46e5\"\n              animationDuration={1000}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </section>\n\n      {/* Scatter Chart: Mentions vs Trust Score */}\n      <section className=\"bg-white p-4 rounded shadow\">\n        <h2 className=\"text-2xl font-extrabold mb-6 text-pink-600\">Brand Mentions vs Trust Score</h2>\n        <ResponsiveContainer width=\"100%\" height={320}>\n          <ScatterChart\n            margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e7ff\" />\n            <XAxis\n              type=\"number\"\n              dataKey=\"mention_count\"\n              name=\"Mentions\"\n              tick={{ fill: '#9ca3af' }}\n              label={{ value: 'Mention Count', position: 'bottom', fill: '#374151', fontWeight: '700' }}\n              domain={['dataMin - 100', 'dataMax + 100']}\n            />\n            <YAxis\n              type=\"number\"\n              dataKey=\"avg_trust_score\"\n              name=\"Trust Score\"\n              tick={{ fill: '#9ca3af' }}\n              label={{ value: 'Avg Trust Score', angle: -90, position: 'insideLeft', fill: '#374151', fontWeight: '700' }}\n              domain={[0, 100]}\n            />\n            <Tooltip\n              cursor={{ strokeDasharray: '3 3' }}\n              formatter={(value, name) => (name === 'Trust Score' ? value.toFixed(2) : value)}\n              contentStyle={{ backgroundColor: '#fef3c7', borderRadius: 8, borderColor: '#f59e0b' }}\n            />\n            <Scatter\n              name=\"Brands\"\n              data={scatterData}\n              fill=\"#ec4899\"\n            >\n              {scatterData.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n              ))}\n            </Scatter>\n          </ScatterChart>\n        </ResponsiveContainer>\n      </section>\n\n      {/* Stacked Bar Chart: Alerts by Brand and Level */}\n      <section className=\"bg-white p-4 rounded shadow\">\n        <h2 className=\"text-2xl font-extrabold mb-6 text-green-600\">Alerts by Brand and Severity</h2>\n        <ResponsiveContainer width=\"100%\" height={320}>\n          <BarChart data={stackedBarData} margin={{ bottom: 20 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#d1fae5\" />\n            <XAxis dataKey=\"brand\" tick={{ fill: '#065f46', fontWeight: '700' }} />\n            <YAxis tick={{ fill: '#065f46', fontWeight: '700' }} />\n            <Tooltip\n              contentStyle={{ backgroundColor: '#dcfce7', borderRadius: 8, borderColor: '#22c55e' }}\n            />\n            <Legend verticalAlign=\"top\" wrapperStyle={{ fontWeight: '700' }} />\n            {alertLevels.map((level, idx) => (\n              <Bar\n                key={level}\n                dataKey={level}\n                stackId=\"a\"\n                fill={COLORS[idx % COLORS.length]}\n                radius={idx === alertLevels.length - 1 ? [8, 8, 0, 0] : 0}\n                animationDuration={1000}\n              />\n            ))}\n          </BarChart>\n        </ResponsiveContainer>\n      </section>\n\n      {/* Trust Score Trend Line Chart */}\n      <section className=\"bg-white p-4 rounded shadow\">\n        <h2 className=\"text-2xl font-extrabold mb-6 text-amber-600\">Trust Score Trend Over Time</h2>\n        <ResponsiveContainer width=\"100%\" height={320}>\n          <LineChart data={lineChartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#fbbf24\" />\n            <XAxis\n              dataKey=\"date\"\n              tick={{ fill: '#78350f', fontWeight: '600' }}\n              tickFormatter={date => dayjs(date).format('MMM D')}\n            />\n            <YAxis\n              domain={[0, 100]}\n              tick={{ fill: '#78350f', fontWeight: '600' }}\n            />\n            <Tooltip\n              contentStyle={{ backgroundColor: '#fef3c7', borderRadius: 8, borderColor: '#f59e0b' }}\n              labelFormatter={label => dayjs(label).format('MMMM D, YYYY')}\n            />\n            <Legend verticalAlign=\"top\" wrapperStyle={{ fontWeight: '700' }} />\n            {uniqueBrands.map((brand, idx) => (\n              <Line\n                key={brand}\n                type=\"monotone\"\n                dataKey={brand}\n                stroke={COLORS[idx % COLORS.length]}\n                dot={false}\n                connectNulls\n                strokeWidth={3}\n                animationDuration={1000}\n              />\n            ))}\n          </LineChart>\n        </ResponsiveContainer>\n      </section>\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}