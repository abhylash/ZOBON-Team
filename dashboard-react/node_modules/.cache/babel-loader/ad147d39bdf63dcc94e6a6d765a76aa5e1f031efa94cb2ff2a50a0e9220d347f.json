{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"rectSize\", \"legendCellSize\", \"space\", \"monthPlacement\", \"startDate\", \"endDate\", \"rectProps\", \"rectRender\", \"legendRender\", \"value\", \"weekLabels\", \"monthLabels\", \"panelColors\", \"style\"];\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { LabelsWeek } from \"./LabelsWeek.js\";\nimport { LabelsMonth } from \"./LabelsMonth.js\";\nimport { isValidDate, oneDayTime, convertPanelColors } from \"./utils.js\";\nimport Legend from \"./Legend.js\";\nimport { Day } from \"./Day.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SVG(props) {\n  var _ref = props || {},\n    {\n      rectSize = 11,\n      legendCellSize = 11,\n      space = 2,\n      monthPlacement = 'top',\n      startDate = new Date(),\n      endDate,\n      rectProps,\n      rectRender,\n      legendRender,\n      value = [],\n      weekLabels = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n      monthLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      panelColors = ['var(--rhm-rect, #EBEDF0)', '#C6E48B', '#7BC96F', '#239A3B', '#196127'],\n      style\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var maxCount = Math.max(...value.map(item => item.count), 0);\n  var panelColorsObject = Array.isArray(panelColors) ? convertPanelColors(panelColors, maxCount) : panelColors;\n  var [gridNum, setGridNum] = useState(0);\n  var [leftPad, setLeftPad] = useState(!!weekLabels ? 28 : 5);\n  var defaultTopPad = monthPlacement === 'top' ? 20 : 5;\n  var [topPad, setTopPad] = useState(!!monthLabels ? defaultTopPad : 5);\n  var svgRef = /*#__PURE__*/React.createRef();\n  useEffect(() => setLeftPad(!!weekLabels ? 28 : 5), [weekLabels]);\n  useEffect(() => {\n    if (svgRef.current) {\n      var width = svgRef.current.clientWidth - leftPad || 0;\n      setGridNum(Math.floor(width / (rectSize + space)) || 0);\n    }\n  }, [rectSize, svgRef, space, leftPad]);\n  useEffect(() => {\n    setTopPad(!!monthLabels ? defaultTopPad : 5);\n  }, [monthLabels]);\n  var initStartDate = useMemo(() => {\n    if (isValidDate(startDate)) {\n      return !startDate.getDay() ? startDate : new Date(startDate.getTime() - startDate.getDay() * oneDayTime);\n    } else {\n      var newDate = new Date();\n      return new Date(newDate.getTime() - newDate.getDay() * oneDayTime);\n    }\n  }, [startDate]);\n  var styl = {\n    color: 'var(--rhm-text-color, #24292e)',\n    userSelect: 'none',\n    display: 'block',\n    fontSize: 10\n  };\n  var monthRectY = monthPlacement === 'top' ? 15 : 15 * 7 + space;\n  var legendTopPad = monthPlacement === 'top' ? topPad + rectSize * 8 + 6 : (!!monthLabels ? topPad + rectSize + space : topPad) + rectSize * 8 + 6;\n  return /*#__PURE__*/_jsxs(\"svg\", _extends({\n    ref: svgRef,\n    style: _extends({}, styl, style)\n  }, other, {\n    children: [legendCellSize !== 0 && /*#__PURE__*/_jsx(Legend, {\n      legendRender: legendRender,\n      panelColors: panelColorsObject,\n      rectSize: rectSize,\n      rectY: legendTopPad,\n      legendCellSize: legendCellSize,\n      leftPad: leftPad,\n      topPad: topPad,\n      space: space\n    }), /*#__PURE__*/_jsx(LabelsWeek, {\n      weekLabels: weekLabels,\n      rectSize: rectSize,\n      space: space,\n      topPad: topPad\n    }), /*#__PURE__*/_jsx(LabelsMonth, {\n      monthLabels: monthLabels,\n      rectSize: rectSize,\n      space: space,\n      leftPad: leftPad,\n      colNum: gridNum,\n      rectY: monthRectY,\n      startDate: initStartDate,\n      endDate: endDate\n    }), /*#__PURE__*/_jsx(Day, {\n      transform: \"translate(\" + leftPad + \", \" + topPad + \")\",\n      gridNum: gridNum,\n      initStartDate: initStartDate,\n      endDate: endDate,\n      rectProps: rectProps,\n      rectSize: rectSize,\n      rectRender: rectRender,\n      panelColors: panelColorsObject,\n      value: value,\n      space: space\n    })]\n  }));\n}","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useEffect","useMemo","useState","LabelsWeek","LabelsMonth","isValidDate","oneDayTime","convertPanelColors","Legend","Day","jsx","_jsx","jsxs","_jsxs","SVG","props","_ref","rectSize","legendCellSize","space","monthPlacement","startDate","Date","endDate","rectProps","rectRender","legendRender","value","weekLabels","monthLabels","panelColors","style","other","maxCount","Math","max","map","item","count","panelColorsObject","Array","isArray","gridNum","setGridNum","leftPad","setLeftPad","defaultTopPad","topPad","setTopPad","svgRef","createRef","current","width","clientWidth","floor","initStartDate","getDay","getTime","newDate","styl","color","userSelect","display","fontSize","monthRectY","legendTopPad","ref","children","rectY","colNum","transform"],"sources":["/home/dell/zobon/dashboard-react/node_modules/@uiw/react-heat-map/esm/SVG.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"rectSize\", \"legendCellSize\", \"space\", \"monthPlacement\", \"startDate\", \"endDate\", \"rectProps\", \"rectRender\", \"legendRender\", \"value\", \"weekLabels\", \"monthLabels\", \"panelColors\", \"style\"];\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { LabelsWeek } from \"./LabelsWeek.js\";\nimport { LabelsMonth } from \"./LabelsMonth.js\";\nimport { isValidDate, oneDayTime, convertPanelColors } from \"./utils.js\";\nimport Legend from \"./Legend.js\";\nimport { Day } from \"./Day.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SVG(props) {\n  var _ref = props || {},\n    {\n      rectSize = 11,\n      legendCellSize = 11,\n      space = 2,\n      monthPlacement = 'top',\n      startDate = new Date(),\n      endDate,\n      rectProps,\n      rectRender,\n      legendRender,\n      value = [],\n      weekLabels = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n      monthLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      panelColors = ['var(--rhm-rect, #EBEDF0)', '#C6E48B', '#7BC96F', '#239A3B', '#196127'],\n      style\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var maxCount = Math.max(...value.map(item => item.count), 0);\n  var panelColorsObject = Array.isArray(panelColors) ? convertPanelColors(panelColors, maxCount) : panelColors;\n  var [gridNum, setGridNum] = useState(0);\n  var [leftPad, setLeftPad] = useState(!!weekLabels ? 28 : 5);\n  var defaultTopPad = monthPlacement === 'top' ? 20 : 5;\n  var [topPad, setTopPad] = useState(!!monthLabels ? defaultTopPad : 5);\n  var svgRef = /*#__PURE__*/React.createRef();\n  useEffect(() => setLeftPad(!!weekLabels ? 28 : 5), [weekLabels]);\n  useEffect(() => {\n    if (svgRef.current) {\n      var width = svgRef.current.clientWidth - leftPad || 0;\n      setGridNum(Math.floor(width / (rectSize + space)) || 0);\n    }\n  }, [rectSize, svgRef, space, leftPad]);\n  useEffect(() => {\n    setTopPad(!!monthLabels ? defaultTopPad : 5);\n  }, [monthLabels]);\n  var initStartDate = useMemo(() => {\n    if (isValidDate(startDate)) {\n      return !startDate.getDay() ? startDate : new Date(startDate.getTime() - startDate.getDay() * oneDayTime);\n    } else {\n      var newDate = new Date();\n      return new Date(newDate.getTime() - newDate.getDay() * oneDayTime);\n    }\n  }, [startDate]);\n  var styl = {\n    color: 'var(--rhm-text-color, #24292e)',\n    userSelect: 'none',\n    display: 'block',\n    fontSize: 10\n  };\n  var monthRectY = monthPlacement === 'top' ? 15 : 15 * 7 + space;\n  var legendTopPad = monthPlacement === 'top' ? topPad + rectSize * 8 + 6 : (!!monthLabels ? topPad + rectSize + space : topPad) + rectSize * 8 + 6;\n  return /*#__PURE__*/_jsxs(\"svg\", _extends({\n    ref: svgRef,\n    style: _extends({}, styl, style)\n  }, other, {\n    children: [legendCellSize !== 0 && /*#__PURE__*/_jsx(Legend, {\n      legendRender: legendRender,\n      panelColors: panelColorsObject,\n      rectSize: rectSize,\n      rectY: legendTopPad,\n      legendCellSize: legendCellSize,\n      leftPad: leftPad,\n      topPad: topPad,\n      space: space\n    }), /*#__PURE__*/_jsx(LabelsWeek, {\n      weekLabels: weekLabels,\n      rectSize: rectSize,\n      space: space,\n      topPad: topPad\n    }), /*#__PURE__*/_jsx(LabelsMonth, {\n      monthLabels: monthLabels,\n      rectSize: rectSize,\n      space: space,\n      leftPad: leftPad,\n      colNum: gridNum,\n      rectY: monthRectY,\n      startDate: initStartDate,\n      endDate: endDate\n    }), /*#__PURE__*/_jsx(Day, {\n      transform: \"translate(\" + leftPad + \", \" + topPad + \")\",\n      gridNum: gridNum,\n      initStartDate: initStartDate,\n      endDate: endDate,\n      rectProps: rectProps,\n      rectSize: rectSize,\n      rectRender: rectRender,\n      panelColors: panelColorsObject,\n      value: value,\n      space: space\n    })]\n  }));\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}