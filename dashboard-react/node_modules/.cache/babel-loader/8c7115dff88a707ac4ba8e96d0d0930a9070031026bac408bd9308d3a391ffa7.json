{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Dynamic Assistant URL discovery\nconst getAssistantUrl = () => {\n  if (process.env.REACT_APP_ASSISTANT_URL) return process.env.REACT_APP_ASSISTANT_URL;\n  const ports = [5002, 5000, 3001];\n  for (const port of ports) {\n    if (window.location.port === port.toString()) continue;\n    console.log(`🔄 Probing assistant on port ${port}`);\n    return `http://localhost:${port}/api`;\n  }\n  return 'http://localhost:5002/api';\n};\nconst ASSISTANT_URL = getAssistantUrl();\nconsole.log(`🌐 Using Assistant URL: ${ASSISTANT_URL}`);\nconst TIMEOUTS = {\n  STANDARD: 60000,\n  EXTENDED: 20000,\n  ASSISTANT: 45000,\n  HEALTH_CHECK: 5000\n};\nclass ApiService {\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const timeout = options.timeout || TIMEOUTS.STANDARD;\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      signal: controller.signal,\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return {\n        data\n      };\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (error.name === 'AbortError') {\n        throw new Error('Request timeout - please try again');\n      }\n      console.error(`API request failed: ${endpoint}`, error);\n      throw error;\n    }\n  }\n  async healthCheck() {\n    return this.request('/health', {\n      timeout: TIMEOUTS.HEALTH_CHECK\n    });\n  }\n  async getDashboardOverview() {\n    return this.request('/dashboard/overview', {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n  async getBrands() {\n    return this.request('/brands');\n  }\n  async getBrandScores(brand, limit = 100) {\n    return this.request(`/brands/${encodeURIComponent(brand)}/scores?limit=${limit}`);\n  }\n  async getBrandPerformance(brand, days = 30) {\n    return this.request(`/performance/${encodeURIComponent(brand)}?days=${days}`);\n  }\n  async getAlerts(limit = 50) {\n    return this.request(`/alerts?limit=${limit}`);\n  }\n  async resolveAlert(alertId) {\n    return this.request(`/alerts/${alertId}/resolve`, {\n      method: 'POST'\n    });\n  }\n  async getSentimentTrends(brand = null, days = 7) {\n    const params = new URLSearchParams({\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/sentiment-trends?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n  async getBiasDistribution(brand = null, days = 7) {\n    const params = new URLSearchParams({\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/bias-distribution?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n\n  // Enhanced endpoint for Alert Severity Pie Chart\n  async getAlertSeverityData(brand = null, days = 7) {\n    const params = new URLSearchParams({\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/alert-severity?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n\n  // Enhanced endpoint for Bias Heatmap Chart\n  async getBiasHeatmapData(brand = null, days = 7) {\n    const params = new URLSearchParams({\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/bias-heatmap?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n\n  // Enhanced endpoint for Brand Trust Trends Chart\n  async getBrandTrustTrends(brand = null, days = 7) {\n    const params = new URLSearchParams({\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/brand-trust-trends?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n\n  // Enhanced utility endpoints for chart data\n  async getAlertsWithSeverity(brand = null, limit = 100) {\n    const params = new URLSearchParams({\n      limit: limit.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/alerts/severity?${params}`);\n  }\n  async getBiasMetrics(brand = null, days = 30) {\n    const params = new URLSearchParams({\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/bias-metrics?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n  async getTrustScoreHistory(brand = null, days = 30) {\n    const params = new URLSearchParams({\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/trust-score-history?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n\n  // Batch data fetching for dashboard efficiency\n  async getDashboardChartData(brand = null, days = 30) {\n    const params = new URLSearchParams({\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/dashboard/chart-data?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n\n  // New comprehensive data endpoints for advanced analytics\n  async getComprehensiveBiasData(brand = null, days = 30) {\n    const params = new URLSearchParams({\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/comprehensive-bias-data?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n  async getAlertSeverityDistribution(brand = null, days = 30) {\n    const params = new URLSearchParams({\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/alert-severity-distribution?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n  async getBrandTrustMetrics(brand = null, days = 30) {\n    const params = new URLSearchParams({\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/brand-trust-metrics?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n  async getBiasHeatmapMatrix(brand = null, days = 30) {\n    const params = new URLSearchParams({\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/bias-heatmap-matrix?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n\n  // Time-series data endpoints\n  async getTimeSeriesData(metric, brand = null, days = 30) {\n    const params = new URLSearchParams({\n      metric: metric,\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/time-series?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n  async getMultiMetricTimeSeriesData(metrics = [], brand = null, days = 30) {\n    const params = new URLSearchParams({\n      metrics: metrics.join(','),\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/multi-metric-time-series?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n\n  // Advanced filtering and aggregation endpoints\n  async getFilteredAlerts(filters = {}, limit = 100) {\n    const params = new URLSearchParams({\n      limit: limit.toString()\n    });\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value !== null && value !== undefined) {\n        params.append(key, value);\n      }\n    });\n    return this.request(`/alerts/filtered?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n  async getAggregatedMetrics(groupBy = 'brand', aggregation = 'count', days = 30) {\n    const params = new URLSearchParams({\n      groupBy: groupBy,\n      aggregation: aggregation,\n      days: days.toString()\n    });\n    return this.request(`/aggregated-metrics?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n\n  // Export and reporting endpoints\n  async exportChartData(chartType, brand = null, days = 30, format = 'json') {\n    const params = new URLSearchParams({\n      chartType: chartType,\n      days: days.toString(),\n      format: format\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/export/chart-data?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n  async generateReport(reportType, brand = null, days = 30) {\n    const params = new URLSearchParams({\n      reportType: reportType,\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/generate-report?${params}`, {\n      timeout: TIMEOUTS.EXTENDED\n    });\n  }\n}\n\n// 🧠 ZOBON assistant API (enhanced with chart-specific methods)\nexport const askSQLAssistant = async (question, context = {}, retryCount = 0) => {\n  const MAX_RETRIES = 2;\n  const RETRY_DELAY = 2000;\n  if (!question || typeof question !== 'string' || !question.trim()) {\n    throw new Error('Question must be a non-empty string');\n  }\n  const normalizedQuestion = question.trim();\n  const payload = {\n    question: normalizedQuestion,\n    ...context\n  };\n  console.log(`🤖 Assistant Request (attempt ${retryCount + 1}):`, {\n    question: normalizedQuestion,\n    context: context,\n    url: `${ASSISTANT_URL}/ask`\n  });\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), TIMEOUTS.ASSISTANT);\n  try {\n    const response = await fetch(`${ASSISTANT_URL}/ask`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(payload),\n      signal: controller.signal\n    });\n    clearTimeout(timeoutId);\n    if (!response.ok) {\n      let errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n      try {\n        const errorData = await response.json();\n        errorMessage = errorData.error || errorData.message || errorMessage;\n      } catch {}\n      throw new Error(`Assistant API error: ${errorMessage}`);\n    }\n    const data = await response.json();\n    if (!data || typeof data !== 'object') {\n      throw new Error('Invalid response from assistant service');\n    }\n    if (data.error) throw new Error(data.error);\n    if (!data.answer || typeof data.answer !== \"string\") {\n      throw new Error('Assistant returned no valid answer');\n    }\n    console.log('✅ Assistant response received successfully');\n    return {\n      data\n    };\n  } catch (error) {\n    clearTimeout(timeoutId);\n    if (error.name === 'AbortError') {\n      throw new Error('Assistant request timed out');\n    }\n    if (error.name === 'TypeError' && error.message.includes('fetch')) {\n      if (retryCount < MAX_RETRIES) {\n        console.log(`🔄 Network error, retrying in ${RETRY_DELAY}ms...`);\n        await new Promise(resolve => setTimeout(resolve, RETRY_DELAY));\n        return askSQLAssistant(question, context, retryCount + 1);\n      }\n      throw new Error(`Connection failed to assistant at ${ASSISTANT_URL}. Is the backend running?`);\n    }\n    throw error;\n  }\n};\n\n// Chart-specific assistant methods\nexport const askChartAssistant = async (chartType, question, chartData = null) => {\n  const context = {\n    chartType: chartType,\n    hasData: chartData !== null,\n    dataSize: chartData ? chartData.length : 0\n  };\n  return askSQLAssistant(question, context);\n};\nexport const askBiasAnalysisAssistant = async (question, biasData = null) => {\n  return askChartAssistant('bias-analysis', question, biasData);\n};\nexport const askTrustTrendAssistant = async (question, trustData = null) => {\n  return askChartAssistant('trust-trend', question, trustData);\n};\nexport const askSeverityAnalysisAssistant = async (question, severityData = null) => {\n  return askChartAssistant('severity-analysis', question, severityData);\n};\nexport const checkAssistantHealth = async () => {\n  console.log(`🔍 Checking AI Assistant health at ${ASSISTANT_URL}...`);\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), TIMEOUTS.HEALTH_CHECK);\n  try {\n    const response = await fetch(`${ASSISTANT_URL}/health`, {\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\"\n      },\n      signal: controller.signal\n    });\n    clearTimeout(timeoutId);\n    if (response.ok) {\n      const healthData = await response.json();\n      console.log('✅ Health check successful');\n      return {\n        status: 'healthy',\n        timestamp: Date.now(),\n        details: healthData,\n        url: ASSISTANT_URL\n      };\n    } else {\n      return {\n        status: 'unhealthy',\n        error: `HTTP ${response.status}`,\n        timestamp: Date.now(),\n        url: ASSISTANT_URL\n      };\n    }\n  } catch (error) {\n    clearTimeout(timeoutId);\n    console.error('❌ Health check failed:', error);\n    return {\n      status: 'unreachable',\n      error: error.message,\n      timestamp: Date.now(),\n      url: ASSISTANT_URL\n    };\n  }\n};\nexport const testAssistantConnection = async () => {\n  console.log('🧪 Testing AI Assistant connection...');\n  try {\n    const healthResult = await checkAssistantHealth();\n    if (healthResult.status === 'unreachable') {\n      return {\n        success: false,\n        error: 'Service is unreachable',\n        details: healthResult\n      };\n    }\n    const {\n      data: queryResult\n    } = await askSQLAssistant(\"Show me a simple test query\");\n    return {\n      success: true,\n      health: healthResult,\n      testQuery: queryResult\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","getAssistantUrl","REACT_APP_ASSISTANT_URL","ports","port","window","location","toString","console","log","ASSISTANT_URL","TIMEOUTS","STANDARD","EXTENDED","ASSISTANT","HEALTH_CHECK","ApiService","request","endpoint","options","url","timeout","controller","AbortController","timeoutId","setTimeout","abort","config","headers","signal","response","fetch","clearTimeout","ok","Error","status","data","json","error","name","healthCheck","getDashboardOverview","getBrands","getBrandScores","brand","limit","encodeURIComponent","getBrandPerformance","days","getAlerts","resolveAlert","alertId","method","getSentimentTrends","params","URLSearchParams","append","getBiasDistribution","getAlertSeverityData","getBiasHeatmapData","getBrandTrustTrends","getAlertsWithSeverity","getBiasMetrics","getTrustScoreHistory","getDashboardChartData","getComprehensiveBiasData","getAlertSeverityDistribution","getBrandTrustMetrics","getBiasHeatmapMatrix","getTimeSeriesData","metric","getMultiMetricTimeSeriesData","metrics","join","getFilteredAlerts","filters","Object","entries","forEach","key","value","undefined","getAggregatedMetrics","groupBy","aggregation","exportChartData","chartType","format","generateReport","reportType","askSQLAssistant","question","context","retryCount","MAX_RETRIES","RETRY_DELAY","trim","normalizedQuestion","payload","body","JSON","stringify","errorMessage","statusText","errorData","message","answer","includes","Promise","resolve","askChartAssistant","chartData","hasData","dataSize","length","askBiasAnalysisAssistant","biasData","askTrustTrendAssistant","trustData","askSeverityAnalysisAssistant","severityData","checkAssistantHealth","healthData","timestamp","Date","now","details","testAssistantConnection","healthResult","success","queryResult","health","testQuery","apiService"],"sources":["/home/dell/zobon/dashboard-react/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Dynamic Assistant URL discovery\nconst getAssistantUrl = () => {\n  if (process.env.REACT_APP_ASSISTANT_URL) return process.env.REACT_APP_ASSISTANT_URL;\n\n  const ports = [5002, 5000, 3001];\n  for (const port of ports) {\n    if (window.location.port === port.toString()) continue;\n    console.log(`🔄 Probing assistant on port ${port}`);\n    return `http://localhost:${port}/api`;\n  }\n\n  return 'http://localhost:5002/api';\n};\n\nconst ASSISTANT_URL = getAssistantUrl();\nconsole.log(`🌐 Using Assistant URL: ${ASSISTANT_URL}`);\n\nconst TIMEOUTS = {\n  STANDARD: 60000,\n  EXTENDED: 20000,\n  ASSISTANT: 45000,\n  HEALTH_CHECK: 5000,\n};\n\nclass ApiService {\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const timeout = options.timeout || TIMEOUTS.STANDARD;\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      signal: controller.signal,\n      ...options,\n    };\n\n    try {\n      const response = await fetch(url, config);\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return { data };\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (error.name === 'AbortError') {\n        throw new Error('Request timeout - please try again');\n      }\n      console.error(`API request failed: ${endpoint}`, error);\n      throw error;\n    }\n  }\n\n  async healthCheck() {\n    return this.request('/health', { timeout: TIMEOUTS.HEALTH_CHECK });\n  }\n\n  async getDashboardOverview() {\n    return this.request('/dashboard/overview', { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  async getBrands() {\n    return this.request('/brands');\n  }\n\n  async getBrandScores(brand, limit = 100) {\n    return this.request(`/brands/${encodeURIComponent(brand)}/scores?limit=${limit}`);\n  }\n\n  async getBrandPerformance(brand, days = 30) {\n    return this.request(`/performance/${encodeURIComponent(brand)}?days=${days}`);\n  }\n\n  async getAlerts(limit = 50) {\n    return this.request(`/alerts?limit=${limit}`);\n  }\n\n  async resolveAlert(alertId) {\n    return this.request(`/alerts/${alertId}/resolve`, {\n      method: 'POST',\n    });\n  }\n\n  async getSentimentTrends(brand = null, days = 7) {\n    const params = new URLSearchParams({ days: days.toString() });\n    if (brand) params.append('brand', brand);\n    return this.request(`/sentiment-trends?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  async getBiasDistribution(brand = null, days = 7) {\n    const params = new URLSearchParams({ days: days.toString() });\n    if (brand) params.append('brand', brand);\n    return this.request(`/bias-distribution?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  // Enhanced endpoint for Alert Severity Pie Chart\n  async getAlertSeverityData(brand = null, days = 7) {\n    const params = new URLSearchParams({ days: days.toString() });\n    if (brand) params.append('brand', brand);\n    return this.request(`/alert-severity?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  // Enhanced endpoint for Bias Heatmap Chart\n  async getBiasHeatmapData(brand = null, days = 7) {\n    const params = new URLSearchParams({ days: days.toString() });\n    if (brand) params.append('brand', brand);\n    return this.request(`/bias-heatmap?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  // Enhanced endpoint for Brand Trust Trends Chart\n  async getBrandTrustTrends(brand = null, days = 7) {\n    const params = new URLSearchParams({ days: days.toString() });\n    if (brand) params.append('brand', brand);\n    return this.request(`/brand-trust-trends?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  // Enhanced utility endpoints for chart data\n  async getAlertsWithSeverity(brand = null, limit = 100) {\n    const params = new URLSearchParams({ limit: limit.toString() });\n    if (brand) params.append('brand', brand);\n    return this.request(`/alerts/severity?${params}`);\n  }\n\n  async getBiasMetrics(brand = null, days = 30) {\n    const params = new URLSearchParams({ days: days.toString() });\n    if (brand) params.append('brand', brand);\n    return this.request(`/bias-metrics?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  async getTrustScoreHistory(brand = null, days = 30) {\n    const params = new URLSearchParams({ days: days.toString() });\n    if (brand) params.append('brand', brand);\n    return this.request(`/trust-score-history?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  // Batch data fetching for dashboard efficiency\n  async getDashboardChartData(brand = null, days = 30) {\n    const params = new URLSearchParams({ days: days.toString() });\n    if (brand) params.append('brand', brand);\n    return this.request(`/dashboard/chart-data?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  // New comprehensive data endpoints for advanced analytics\n  async getComprehensiveBiasData(brand = null, days = 30) {\n    const params = new URLSearchParams({ days: days.toString() });\n    if (brand) params.append('brand', brand);\n    return this.request(`/comprehensive-bias-data?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  async getAlertSeverityDistribution(brand = null, days = 30) {\n    const params = new URLSearchParams({ days: days.toString() });\n    if (brand) params.append('brand', brand);\n    return this.request(`/alert-severity-distribution?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  async getBrandTrustMetrics(brand = null, days = 30) {\n    const params = new URLSearchParams({ days: days.toString() });\n    if (brand) params.append('brand', brand);\n    return this.request(`/brand-trust-metrics?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  async getBiasHeatmapMatrix(brand = null, days = 30) {\n    const params = new URLSearchParams({ days: days.toString() });\n    if (brand) params.append('brand', brand);\n    return this.request(`/bias-heatmap-matrix?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  // Time-series data endpoints\n  async getTimeSeriesData(metric, brand = null, days = 30) {\n    const params = new URLSearchParams({ \n      metric: metric,\n      days: days.toString() \n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/time-series?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  async getMultiMetricTimeSeriesData(metrics = [], brand = null, days = 30) {\n    const params = new URLSearchParams({ \n      metrics: metrics.join(','),\n      days: days.toString() \n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/multi-metric-time-series?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  // Advanced filtering and aggregation endpoints\n  async getFilteredAlerts(filters = {}, limit = 100) {\n    const params = new URLSearchParams({ limit: limit.toString() });\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value !== null && value !== undefined) {\n        params.append(key, value);\n      }\n    });\n    return this.request(`/alerts/filtered?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  async getAggregatedMetrics(groupBy = 'brand', aggregation = 'count', days = 30) {\n    const params = new URLSearchParams({ \n      groupBy: groupBy,\n      aggregation: aggregation,\n      days: days.toString() \n    });\n    return this.request(`/aggregated-metrics?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  // Export and reporting endpoints\n  async exportChartData(chartType, brand = null, days = 30, format = 'json') {\n    const params = new URLSearchParams({ \n      chartType: chartType,\n      days: days.toString(),\n      format: format\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/export/chart-data?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n\n  async generateReport(reportType, brand = null, days = 30) {\n    const params = new URLSearchParams({ \n      reportType: reportType,\n      days: days.toString()\n    });\n    if (brand) params.append('brand', brand);\n    return this.request(`/generate-report?${params}`, { timeout: TIMEOUTS.EXTENDED });\n  }\n}\n\n// 🧠 ZOBON assistant API (enhanced with chart-specific methods)\nexport const askSQLAssistant = async (question, context = {}, retryCount = 0) => {\n  const MAX_RETRIES = 2;\n  const RETRY_DELAY = 2000;\n\n  if (!question || typeof question !== 'string' || !question.trim()) {\n    throw new Error('Question must be a non-empty string');\n  }\n\n  const normalizedQuestion = question.trim();\n  const payload = { \n    question: normalizedQuestion,\n    ...context\n  };\n\n  console.log(`🤖 Assistant Request (attempt ${retryCount + 1}):`, {\n    question: normalizedQuestion,\n    context: context,\n    url: `${ASSISTANT_URL}/ask`\n  });\n\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), TIMEOUTS.ASSISTANT);\n\n  try {\n    const response = await fetch(`${ASSISTANT_URL}/ask`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(payload),\n      signal: controller.signal\n    });\n\n    clearTimeout(timeoutId);\n\n    if (!response.ok) {\n      let errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n      try {\n        const errorData = await response.json();\n        errorMessage = errorData.error || errorData.message || errorMessage;\n      } catch {}\n\n      throw new Error(`Assistant API error: ${errorMessage}`);\n    }\n\n    const data = await response.json();\n\n    if (!data || typeof data !== 'object') {\n      throw new Error('Invalid response from assistant service');\n    }\n\n    if (data.error) throw new Error(data.error);\n    if (!data.answer || typeof data.answer !== \"string\") {\n      throw new Error('Assistant returned no valid answer');\n    }\n\n    console.log('✅ Assistant response received successfully');\n    return { data };\n\n  } catch (error) {\n    clearTimeout(timeoutId);\n\n    if (error.name === 'AbortError') {\n      throw new Error('Assistant request timed out');\n    }\n\n    if (error.name === 'TypeError' && error.message.includes('fetch')) {\n      if (retryCount < MAX_RETRIES) {\n        console.log(`🔄 Network error, retrying in ${RETRY_DELAY}ms...`);\n        await new Promise(resolve => setTimeout(resolve, RETRY_DELAY));\n        return askSQLAssistant(question, context, retryCount + 1);\n      }\n\n      throw new Error(`Connection failed to assistant at ${ASSISTANT_URL}. Is the backend running?`);\n    }\n\n    throw error;\n  }\n};\n\n// Chart-specific assistant methods\nexport const askChartAssistant = async (chartType, question, chartData = null) => {\n  const context = {\n    chartType: chartType,\n    hasData: chartData !== null,\n    dataSize: chartData ? chartData.length : 0\n  };\n\n  return askSQLAssistant(question, context);\n};\n\nexport const askBiasAnalysisAssistant = async (question, biasData = null) => {\n  return askChartAssistant('bias-analysis', question, biasData);\n};\n\nexport const askTrustTrendAssistant = async (question, trustData = null) => {\n  return askChartAssistant('trust-trend', question, trustData);\n};\n\nexport const askSeverityAnalysisAssistant = async (question, severityData = null) => {\n  return askChartAssistant('severity-analysis', question, severityData);\n};\n\nexport const checkAssistantHealth = async () => {\n  console.log(`🔍 Checking AI Assistant health at ${ASSISTANT_URL}...`);\n\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), TIMEOUTS.HEALTH_CHECK);\n\n  try {\n    const response = await fetch(`${ASSISTANT_URL}/health`, {\n      method: \"GET\",\n      headers: { \"Accept\": \"application/json\" },\n      signal: controller.signal\n    });\n\n    clearTimeout(timeoutId);\n\n    if (response.ok) {\n      const healthData = await response.json();\n      console.log('✅ Health check successful');\n      return {\n        status: 'healthy',\n        timestamp: Date.now(),\n        details: healthData,\n        url: ASSISTANT_URL\n      };\n    } else {\n      return {\n        status: 'unhealthy',\n        error: `HTTP ${response.status}`,\n        timestamp: Date.now(),\n        url: ASSISTANT_URL\n      };\n    }\n  } catch (error) {\n    clearTimeout(timeoutId);\n    console.error('❌ Health check failed:', error);\n\n    return {\n      status: 'unreachable',\n      error: error.message,\n      timestamp: Date.now(),\n      url: ASSISTANT_URL\n    };\n  }\n};\n\nexport const testAssistantConnection = async () => {\n  console.log('🧪 Testing AI Assistant connection...');\n\n  try {\n    const healthResult = await checkAssistantHealth();\n\n    if (healthResult.status === 'unreachable') {\n      return {\n        success: false,\n        error: 'Service is unreachable',\n        details: healthResult\n      };\n    }\n\n    const { data: queryResult } = await askSQLAssistant(\"Show me a simple test query\");\n\n    return {\n      success: true,\n      health: healthResult,\n      testQuery: queryResult\n    };\n\n  } catch (error) {\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\nconst apiService = new ApiService();\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}