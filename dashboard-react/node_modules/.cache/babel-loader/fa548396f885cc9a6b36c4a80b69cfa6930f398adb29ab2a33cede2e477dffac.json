{"ast":null,"code":"var _jsxFileName = \"/home/dell/zobon/dashboard-react/src/components/FullDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport dayjs from 'dayjs';\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ScatterChart, Scatter, LineChart, Line, Cell } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#4f46e5',\n// Indigo-600\n'#f43f5e',\n// Rose-500\n'#22c55e',\n// Emerald-500\n'#f59e0b',\n// Amber-500\n'#3b82f6',\n// Blue-500\n'#ec4899' // Pink-500\n];\nexport default function FullDashboard() {\n  _s();\n  const [brands, setBrands] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/brands').then(res => setBrands(res.data)).catch(console.error);\n    axios.get('http://localhost:5001/api/alerts?limit=500').then(res => setAlerts(res.data)).catch(console.error);\n  }, []);\n\n  // Custom tooltip component\n  const CustomTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-3 rounded-lg shadow-lg border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold text-gray-800 mb-2\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), payload.map((entry, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          style: {\n            color: entry.color\n          },\n          children: `${entry.name}: ${typeof entry.value === 'number' ? entry.value.toFixed(2) : entry.value}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n\n  // 1. Avg Trust Score by Brand\n  const trustData = brands.map(({\n    brand,\n    avg_trust_score\n  }) => ({\n    brand,\n    avg_trust_score: Number(avg_trust_score.toFixed(2))\n  }));\n\n  // 2. Scatter Chart: brand mentions vs avg trust score\n  const scatterData = brands.map(({\n    brand,\n    avg_trust_score,\n    mention_count\n  }) => ({\n    brand,\n    avg_trust_score: Number(avg_trust_score.toFixed(2)),\n    mention_count\n  }));\n\n  // 3. Stacked Bar Chart: Alerts by Brand & Level\n  const alertLevels = Array.from(new Set(alerts.map(a => a.alert_level)));\n  const brandAlertLevelMap = {};\n  brands.forEach(({\n    brand\n  }) => {\n    brandAlertLevelMap[brand] = {};\n  });\n  alerts.forEach(({\n    brand,\n    alert_level\n  }) => {\n    if (brandAlertLevelMap[brand]) {\n      brandAlertLevelMap[brand][alert_level] = (brandAlertLevelMap[brand][alert_level] || 0) + 1;\n    }\n  });\n  const stackedBarData = brands.map(({\n    brand\n  }) => {\n    const item = {\n      brand\n    };\n    alertLevels.forEach(level => {\n      item[level] = brandAlertLevelMap[brand][level] || 0;\n    });\n    return item;\n  });\n\n  // 4. Trust Score Trend Line Chart\n  const brandDateMap = {};\n  alerts.forEach(({\n    brand,\n    trust_score,\n    timestamp\n  }) => {\n    if (!brand || trust_score == null || !timestamp) return;\n    const date = dayjs(timestamp).format('YYYY-MM-DD');\n    const key = `${brand}-${date}`;\n    if (!brandDateMap[key]) brandDateMap[key] = {\n      brand,\n      date,\n      trustScores: []\n    };\n    brandDateMap[key].trustScores.push(trust_score);\n  });\n  const trendData = Object.values(brandDateMap).map(({\n    brand,\n    date,\n    trustScores\n  }) => ({\n    brand,\n    date,\n    avgTrustScore: trustScores.reduce((a, b) => a + b, 0) / trustScores.length\n  }));\n  const uniqueDates = Array.from(new Set(trendData.map(d => d.date))).sort();\n  const uniqueBrands = Array.from(new Set(trendData.map(d => d.brand)));\n  const lineChartData = uniqueDates.map(date => {\n    const entry = {\n      date\n    };\n    uniqueBrands.forEach(brand => {\n      const found = trendData.find(d => d.brand === brand && d.date === date);\n      entry[brand] = found ? Number(found.avgTrustScore.toFixed(2)) : null;\n    });\n    return entry;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-sm border-b border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-6 py-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl font-bold text-gray-900 mb-2\",\n            children: \"Brand Analytics Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-lg\",\n            children: \"Comprehensive insights into brand performance and trust metrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-6 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 xl:grid-cols-2 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold text-white flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-2 h-2 bg-white rounded-full mr-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), \"Average Trust Score by Brand\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-indigo-100 text-sm mt-1\",\n              children: \"Performance ranking across all brands\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 350,\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: trustData,\n                margin: {\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 40\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n                  children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n                    id: \"trustGradient\",\n                    x1: \"0\",\n                    y1: \"0\",\n                    x2: \"0\",\n                    y2: \"1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n                      offset: \"0%\",\n                      stopColor: \"#4f46e5\",\n                      stopOpacity: 0.8\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n                      offset: \"100%\",\n                      stopColor: \"#4f46e5\",\n                      stopOpacity: 0.4\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\",\n                  stroke: \"#cbd5e1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"brand\",\n                  tick: {\n                    fill: '#334155',\n                    fontWeight: '600'\n                  },\n                  axisLine: {\n                    stroke: '#cbd5e1'\n                  },\n                  tickLine: {\n                    stroke: '#cbd5e1'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  domain: [0, 100],\n                  tick: {\n                    fill: '#334155',\n                    fontWeight: '600'\n                  },\n                  axisLine: {\n                    stroke: '#cbd5e1'\n                  },\n                  tickLine: {\n                    stroke: '#cbd5e1'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"avg_trust_score\",\n                  fill: \"url(#trustGradient)\",\n                  radius: [8, 8, 0, 0],\n                  animationDuration: 1000\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gradient-to-r from-pink-500 to-rose-500 px-6 py-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold text-white flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-2 h-2 bg-white rounded-full mr-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), \"Brand Mentions vs Trust Score\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-pink-100 text-sm mt-1\",\n              children: \"Correlation between visibility and trust\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 350,\n              children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n                margin: {\n                  top: 20,\n                  right: 20,\n                  bottom: 40,\n                  left: 20\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\",\n                  stroke: \"#e0e7ff\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  type: \"number\",\n                  dataKey: \"mention_count\",\n                  name: \"Mentions\",\n                  tick: {\n                    fill: '#9ca3af'\n                  },\n                  axisLine: {\n                    stroke: '#f3f4f6'\n                  },\n                  tickLine: {\n                    stroke: '#f3f4f6'\n                  },\n                  label: {\n                    value: 'Mention Count',\n                    position: 'bottom',\n                    fill: '#374151',\n                    fontWeight: '700'\n                  },\n                  domain: ['dataMin - 100', 'dataMax + 100']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  type: \"number\",\n                  dataKey: \"avg_trust_score\",\n                  name: \"Trust Score\",\n                  tick: {\n                    fill: '#9ca3af'\n                  },\n                  axisLine: {\n                    stroke: '#f3f4f6'\n                  },\n                  tickLine: {\n                    stroke: '#f3f4f6'\n                  },\n                  label: {\n                    value: 'Avg Trust Score',\n                    angle: -90,\n                    position: 'insideLeft',\n                    fill: '#374151',\n                    fontWeight: '700'\n                  },\n                  domain: [0, 100]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n                  name: \"Brands\",\n                  data: scatterData,\n                  fill: \"#ec4899\",\n                  children: scatterData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                    fill: COLORS[index % COLORS.length]\n                  }, `cell-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gradient-to-r from-emerald-500 to-teal-500 px-6 py-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold text-white flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-2 h-2 bg-white rounded-full mr-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), \"Alerts by Brand and Severity\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-emerald-100 text-sm mt-1\",\n              children: \"Alert distribution across severity levels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 350,\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: stackedBarData,\n                margin: {\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 40\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\",\n                  stroke: \"#d1fae5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"brand\",\n                  tick: {\n                    fill: '#065f46',\n                    fontWeight: '700'\n                  },\n                  axisLine: {\n                    stroke: '#a7f3d0'\n                  },\n                  tickLine: {\n                    stroke: '#a7f3d0'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  tick: {\n                    fill: '#065f46',\n                    fontWeight: '700'\n                  },\n                  axisLine: {\n                    stroke: '#a7f3d0'\n                  },\n                  tickLine: {\n                    stroke: '#a7f3d0'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                  verticalAlign: \"top\",\n                  height: 36,\n                  wrapperStyle: {\n                    fontWeight: '700'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this), alertLevels.map((level, idx) => /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: level,\n                  stackId: \"a\",\n                  fill: COLORS[idx % COLORS.length],\n                  radius: idx === alertLevels.length - 1 ? [8, 8, 0, 0] : 0,\n                  animationDuration: 1000\n                }, level, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gradient-to-r from-amber-500 to-orange-500 px-6 py-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold text-white flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-2 h-2 bg-white rounded-full mr-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), \"Trust Score Trend Over Time\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-amber-100 text-sm mt-1\",\n              children: \"Performance trends across time periods\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 350,\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                data: lineChartData,\n                margin: {\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 40\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\",\n                  stroke: \"#fbbf24\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"date\",\n                  tick: {\n                    fill: '#78350f',\n                    fontWeight: '600'\n                  },\n                  axisLine: {\n                    stroke: '#fde68a'\n                  },\n                  tickLine: {\n                    stroke: '#fde68a'\n                  },\n                  tickFormatter: date => dayjs(date).format('MMM D')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  domain: [0, 100],\n                  tick: {\n                    fill: '#78350f',\n                    fontWeight: '600'\n                  },\n                  axisLine: {\n                    stroke: '#fde68a'\n                  },\n                  tickLine: {\n                    stroke: '#fde68a'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                  verticalAlign: \"top\",\n                  height: 36,\n                  wrapperStyle: {\n                    fontWeight: '700'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this), uniqueBrands.map((brand, idx) => /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: brand,\n                  stroke: COLORS[idx % COLORS.length],\n                  dot: false,\n                  connectNulls: true,\n                  strokeWidth: 3,\n                  animationDuration: 1000\n                }, brand, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(FullDashboard, \"8D2MBDNwyMSjwVVRvj+53iuoQTM=\");\n_c = FullDashboard;\nvar _c;\n$RefreshReg$(_c, \"FullDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","dayjs","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ScatterChart","Scatter","LineChart","Line","Cell","jsxDEV","_jsxDEV","COLORS","FullDashboard","_s","brands","setBrands","alerts","setAlerts","get","then","res","data","catch","console","error","CustomTooltip","active","payload","label","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","index","style","color","name","value","toFixed","trustData","brand","avg_trust_score","Number","scatterData","mention_count","alertLevels","Array","from","Set","a","alert_level","brandAlertLevelMap","forEach","stackedBarData","item","level","brandDateMap","trust_score","timestamp","date","format","key","trustScores","push","trendData","Object","values","avgTrustScore","reduce","b","uniqueDates","d","sort","uniqueBrands","lineChartData","found","find","width","height","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","stroke","dataKey","tick","fill","fontWeight","axisLine","tickLine","domain","content","radius","animationDuration","type","position","angle","verticalAlign","wrapperStyle","idx","stackId","tickFormatter","dot","connectNulls","strokeWidth","_c","$RefreshReg$"],"sources":["/home/dell/zobon/dashboard-react/src/components/FullDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport dayjs from 'dayjs';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Legend,\n  ScatterChart,\n  Scatter,\n  LineChart,\n  Line,\n  Cell,\n} from 'recharts';\n\nconst COLORS = [\n  '#4f46e5', // Indigo-600\n  '#f43f5e', // Rose-500\n  '#22c55e', // Emerald-500\n  '#f59e0b', // Amber-500\n  '#3b82f6', // Blue-500\n  '#ec4899', // Pink-500\n];\n\nexport default function FullDashboard() {\n  const [brands, setBrands] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/brands').then(res => setBrands(res.data)).catch(console.error);\n    axios.get('http://localhost:5001/api/alerts?limit=500').then(res => setAlerts(res.data)).catch(console.error);\n  }, []);\n\n  // Custom tooltip component\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-white p-3 rounded-lg shadow-lg border border-gray-200\">\n          <p className=\"font-semibold text-gray-800 mb-2\">{label}</p>\n          {payload.map((entry, index) => (\n            <p key={index} className=\"text-sm\" style={{ color: entry.color }}>\n              {`${entry.name}: ${typeof entry.value === 'number' ? entry.value.toFixed(2) : entry.value}`}\n            </p>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  // 1. Avg Trust Score by Brand\n  const trustData = brands.map(({ brand, avg_trust_score }) => ({\n    brand,\n    avg_trust_score: Number(avg_trust_score.toFixed(2)),\n  }));\n\n  // 2. Scatter Chart: brand mentions vs avg trust score\n  const scatterData = brands.map(({ brand, avg_trust_score, mention_count }) => ({\n    brand,\n    avg_trust_score: Number(avg_trust_score.toFixed(2)),\n    mention_count,\n  }));\n\n  // 3. Stacked Bar Chart: Alerts by Brand & Level\n  const alertLevels = Array.from(new Set(alerts.map(a => a.alert_level)));\n  const brandAlertLevelMap = {};\n  brands.forEach(({ brand }) => {\n    brandAlertLevelMap[brand] = {};\n  });\n  alerts.forEach(({ brand, alert_level }) => {\n    if (brandAlertLevelMap[brand]) {\n      brandAlertLevelMap[brand][alert_level] = (brandAlertLevelMap[brand][alert_level] || 0) + 1;\n    }\n  });\n  const stackedBarData = brands.map(({ brand }) => {\n    const item = { brand };\n    alertLevels.forEach(level => {\n      item[level] = brandAlertLevelMap[brand][level] || 0;\n    });\n    return item;\n  });\n\n  // 4. Trust Score Trend Line Chart\n  const brandDateMap = {};\n  alerts.forEach(({ brand, trust_score, timestamp }) => {\n    if (!brand || trust_score == null || !timestamp) return;\n    const date = dayjs(timestamp).format('YYYY-MM-DD');\n    const key = `${brand}-${date}`;\n    if (!brandDateMap[key]) brandDateMap[key] = { brand, date, trustScores: [] };\n    brandDateMap[key].trustScores.push(trust_score);\n  });\n  const trendData = Object.values(brandDateMap).map(({ brand, date, trustScores }) => ({\n    brand,\n    date,\n    avgTrustScore: trustScores.reduce((a, b) => a + b, 0) / trustScores.length,\n  }));\n  const uniqueDates = Array.from(new Set(trendData.map(d => d.date))).sort();\n  const uniqueBrands = Array.from(new Set(trendData.map(d => d.brand)));\n  const lineChartData = uniqueDates.map(date => {\n    const entry = { date };\n    uniqueBrands.forEach(brand => {\n      const found = trendData.find(d => d.brand === brand && d.date === date);\n      entry[brand] = found ? Number(found.avgTrustScore.toFixed(2)) : null;\n    });\n    return entry;\n  });\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-6 py-8\">\n          <div className=\"text-center\">\n            <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">Brand Analytics Dashboard</h1>\n            <p className=\"text-gray-600 text-lg\">Comprehensive insights into brand performance and trust metrics</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-6 py-8\">\n        <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-8\">\n\n          {/* Avg Trust Score Bar Chart */}\n          <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden\">\n            <div className=\"bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4\">\n              <h2 className=\"text-xl font-bold text-white flex items-center\">\n                <div className=\"w-2 h-2 bg-white rounded-full mr-3\"></div>\n                Average Trust Score by Brand\n              </h2>\n              <p className=\"text-indigo-100 text-sm mt-1\">Performance ranking across all brands</p>\n            </div>\n            <div className=\"p-6\">\n              <ResponsiveContainer width=\"100%\" height={350}>\n                <BarChart data={trustData} margin={{ top: 20, right: 30, left: 20, bottom: 40 }}>\n                  <defs>\n                    <linearGradient id=\"trustGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                      <stop offset=\"0%\" stopColor=\"#4f46e5\" stopOpacity={0.8}/>\n                      <stop offset=\"100%\" stopColor=\"#4f46e5\" stopOpacity={0.4}/>\n                    </linearGradient>\n                  </defs>\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#cbd5e1\" />\n                  <XAxis \n                    dataKey=\"brand\" \n                    tick={{ fill: '#334155', fontWeight: '600' }}\n                    axisLine={{ stroke: '#cbd5e1' }}\n                    tickLine={{ stroke: '#cbd5e1' }}\n                  />\n                  <YAxis \n                    domain={[0, 100]} \n                    tick={{ fill: '#334155', fontWeight: '600' }}\n                    axisLine={{ stroke: '#cbd5e1' }}\n                    tickLine={{ stroke: '#cbd5e1' }}\n                  />\n                  <Tooltip content={<CustomTooltip />} />\n                  <Bar\n                    dataKey=\"avg_trust_score\"\n                    fill=\"url(#trustGradient)\"\n                    radius={[8, 8, 0, 0]}\n                    animationDuration={1000}\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Scatter Chart: Mentions vs Trust Score */}\n          <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden\">\n            <div className=\"bg-gradient-to-r from-pink-500 to-rose-500 px-6 py-4\">\n              <h2 className=\"text-xl font-bold text-white flex items-center\">\n                <div className=\"w-2 h-2 bg-white rounded-full mr-3\"></div>\n                Brand Mentions vs Trust Score\n              </h2>\n              <p className=\"text-pink-100 text-sm mt-1\">Correlation between visibility and trust</p>\n            </div>\n            <div className=\"p-6\">\n              <ResponsiveContainer width=\"100%\" height={350}>\n                <ScatterChart margin={{ top: 20, right: 20, bottom: 40, left: 20 }}>\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e7ff\" />\n                  <XAxis\n                    type=\"number\"\n                    dataKey=\"mention_count\"\n                    name=\"Mentions\"\n                    tick={{ fill: '#9ca3af' }}\n                    axisLine={{ stroke: '#f3f4f6' }}\n                    tickLine={{ stroke: '#f3f4f6' }}\n                    label={{ value: 'Mention Count', position: 'bottom', fill: '#374151', fontWeight: '700' }}\n                    domain={['dataMin - 100', 'dataMax + 100']}\n                  />\n                  <YAxis\n                    type=\"number\"\n                    dataKey=\"avg_trust_score\"\n                    name=\"Trust Score\"\n                    tick={{ fill: '#9ca3af' }}\n                    axisLine={{ stroke: '#f3f4f6' }}\n                    tickLine={{ stroke: '#f3f4f6' }}\n                    label={{ value: 'Avg Trust Score', angle: -90, position: 'insideLeft', fill: '#374151', fontWeight: '700' }}\n                    domain={[0, 100]}\n                  />\n                  <Tooltip content={<CustomTooltip />} />\n                  <Scatter\n                    name=\"Brands\"\n                    data={scatterData}\n                    fill=\"#ec4899\"\n                  >\n                    {scatterData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Scatter>\n                </ScatterChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Stacked Bar Chart: Alerts by Brand and Level */}\n          <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden\">\n            <div className=\"bg-gradient-to-r from-emerald-500 to-teal-500 px-6 py-4\">\n              <h2 className=\"text-xl font-bold text-white flex items-center\">\n                <div className=\"w-2 h-2 bg-white rounded-full mr-3\"></div>\n                Alerts by Brand and Severity\n              </h2>\n              <p className=\"text-emerald-100 text-sm mt-1\">Alert distribution across severity levels</p>\n            </div>\n            <div className=\"p-6\">\n              <ResponsiveContainer width=\"100%\" height={350}>\n                <BarChart data={stackedBarData} margin={{ top: 20, right: 30, left: 20, bottom: 40 }}>\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#d1fae5\" />\n                  <XAxis \n                    dataKey=\"brand\" \n                    tick={{ fill: '#065f46', fontWeight: '700' }}\n                    axisLine={{ stroke: '#a7f3d0' }}\n                    tickLine={{ stroke: '#a7f3d0' }}\n                  />\n                  <YAxis \n                    tick={{ fill: '#065f46', fontWeight: '700' }}\n                    axisLine={{ stroke: '#a7f3d0' }}\n                    tickLine={{ stroke: '#a7f3d0' }}\n                  />\n                  <Tooltip content={<CustomTooltip />} />\n                  <Legend \n                    verticalAlign=\"top\" \n                    height={36}\n                    wrapperStyle={{ fontWeight: '700' }} \n                  />\n                  {alertLevels.map((level, idx) => (\n                    <Bar\n                      key={level}\n                      dataKey={level}\n                      stackId=\"a\"\n                      fill={COLORS[idx % COLORS.length]}\n                      radius={idx === alertLevels.length - 1 ? [8, 8, 0, 0] : 0}\n                      animationDuration={1000}\n                    />\n                  ))}\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Trust Score Trend Line Chart */}\n          <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden\">\n            <div className=\"bg-gradient-to-r from-amber-500 to-orange-500 px-6 py-4\">\n              <h2 className=\"text-xl font-bold text-white flex items-center\">\n                <div className=\"w-2 h-2 bg-white rounded-full mr-3\"></div>\n                Trust Score Trend Over Time\n              </h2>\n              <p className=\"text-amber-100 text-sm mt-1\">Performance trends across time periods</p>\n            </div>\n            <div className=\"p-6\">\n              <ResponsiveContainer width=\"100%\" height={350}>\n                <LineChart data={lineChartData} margin={{ top: 20, right: 30, left: 20, bottom: 40 }}>\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#fbbf24\" />\n                  <XAxis\n                    dataKey=\"date\"\n                    tick={{ fill: '#78350f', fontWeight: '600' }}\n                    axisLine={{ stroke: '#fde68a' }}\n                    tickLine={{ stroke: '#fde68a' }}\n                    tickFormatter={date => dayjs(date).format('MMM D')}\n                  />\n                  <YAxis\n                    domain={[0, 100]}\n                    tick={{ fill: '#78350f', fontWeight: '600' }}\n                    axisLine={{ stroke: '#fde68a' }}\n                    tickLine={{ stroke: '#fde68a' }}\n                  />\n                  <Tooltip content={<CustomTooltip />} />\n                  <Legend \n                    verticalAlign=\"top\" \n                    height={36}\n                    wrapperStyle={{ fontWeight: '700' }} \n                  />\n                  {uniqueBrands.map((brand, idx) => (\n                    <Line\n                      key={brand}\n                      type=\"monotone\"\n                      dataKey={brand}\n                      stroke={COLORS[idx % COLORS.length]}\n                      dot={false}\n                      connectNulls\n                      strokeWidth={3}\n                      animationDuration={1000}\n                    />\n                  ))}\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}